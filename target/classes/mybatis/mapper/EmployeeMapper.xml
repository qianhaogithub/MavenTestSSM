<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.dao.EmployeeMapper">
    <resultMap id="BaseResultMap" type="com.github.beans.Employee">
        <id column="emp_id" jdbcType="INTEGER" property="empId" />
        <result column="emo_name" jdbcType="VARCHAR" property="emoName" />
        <result column="emp_gender" jdbcType="CHAR" property="empGender" />
        <result column="emp_email" jdbcType="VARCHAR" property="empEmail" />
        <result column="dept_id" jdbcType="INTEGER" property="deptId" />
    </resultMap>
    <resultMap id="BaseResultMapWithDept" type="com.github.beans.Employee">
        <id column="emp_id" jdbcType="INTEGER" property="empId" />
        <result column="emo_name" jdbcType="VARCHAR" property="emoName" />
        <result column="emp_gender" jdbcType="CHAR" property="empGender" />
        <result column="emp_email" jdbcType="VARCHAR" property="empEmail" />
        <result column="dept_id" jdbcType="INTEGER" property="deptId" />
        <association javaType="com.github.beans.Dept" property="dept">
            <id column="dept_id" property="deptId" />
            <result column="dept_name" property="deptName" />
        </association>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    emp_id, emo_name, emp_gender, emp_email, dept_id
  </sql>
    <sql id="WithDept_Column_List">
        emp.emp_id, emp.emo_name, emp.emp_gender, emp.emp_email, emp.dept_id,dept.dept_name
    </sql>
    <select id="selectByExampleWithDept" parameterType="com.github.beans.EmployeeExample" resultMap="BaseResultMapWithDept">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="WithDept_Column_List" />
        from tbl_emp emp left join tbl_dept dept on emp.dept_id = dept.dept_id
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKeyWithDept" parameterType="java.lang.Integer" resultMap="BaseResultMapWithDept">
        select
        <include refid="WithDept_Column_List" />
        from tbl_emp emp left join tbl_dept dept on emp.dept_id = dept.dept_id
        where emp_id = #{empId,jdbcType=INTEGER}
    </select>
    <select id="selectByExample" parameterType="com.github.beans.EmployeeExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from tbl_emp
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from tbl_emp
        where emp_id = #{empId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tbl_emp
    where emp_id = #{empId,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.github.beans.EmployeeExample">
        delete from tbl_emp
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.github.beans.Employee">
    insert into tbl_emp (emp_id, emo_name, emp_gender, 
      emp_email, dept_id)
    values (#{empId,jdbcType=INTEGER}, #{emoName,jdbcType=VARCHAR}, #{empGender,jdbcType=CHAR}, 
      #{empEmail,jdbcType=VARCHAR}, #{deptId,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.github.beans.Employee">
        insert into tbl_emp
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="empId != null">
                emp_id,
            </if>
            <if test="emoName != null">
                emo_name,
            </if>
            <if test="empGender != null">
                emp_gender,
            </if>
            <if test="empEmail != null">
                emp_email,
            </if>
            <if test="deptId != null">
                dept_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="empId != null">
                #{empId,jdbcType=INTEGER},
            </if>
            <if test="emoName != null">
                #{emoName,jdbcType=VARCHAR},
            </if>
            <if test="empGender != null">
                #{empGender,jdbcType=CHAR},
            </if>
            <if test="empEmail != null">
                #{empEmail,jdbcType=VARCHAR},
            </if>
            <if test="deptId != null">
                #{deptId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.github.beans.EmployeeExample" resultType="java.lang.Long">
        select count(*) from tbl_emp
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update tbl_emp
        <set>
            <if test="record.empId != null">
                emp_id = #{record.empId,jdbcType=INTEGER},
            </if>
            <if test="record.emoName != null">
                emo_name = #{record.emoName,jdbcType=VARCHAR},
            </if>
            <if test="record.empGender != null">
                emp_gender = #{record.empGender,jdbcType=CHAR},
            </if>
            <if test="record.empEmail != null">
                emp_email = #{record.empEmail,jdbcType=VARCHAR},
            </if>
            <if test="record.deptId != null">
                dept_id = #{record.deptId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update tbl_emp
        set emp_id = #{record.empId,jdbcType=INTEGER},
        emo_name = #{record.emoName,jdbcType=VARCHAR},
        emp_gender = #{record.empGender,jdbcType=CHAR},
        emp_email = #{record.empEmail,jdbcType=VARCHAR},
        dept_id = #{record.deptId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.github.beans.Employee">
        update tbl_emp
        <set>
            <if test="emoName != null">
                emo_name = #{emoName,jdbcType=VARCHAR},
            </if>
            <if test="empGender != null">
                emp_gender = #{empGender,jdbcType=CHAR},
            </if>
            <if test="empEmail != null">
                emp_email = #{empEmail,jdbcType=VARCHAR},
            </if>
            <if test="deptId != null">
                dept_id = #{deptId,jdbcType=INTEGER},
            </if>
        </set>
        where emp_id = #{empId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.github.beans.Employee">
    update tbl_emp
    set emo_name = #{emoName,jdbcType=VARCHAR},
      emp_gender = #{empGender,jdbcType=CHAR},
      emp_email = #{empEmail,jdbcType=VARCHAR},
      dept_id = #{deptId,jdbcType=INTEGER}
    where emp_id = #{empId,jdbcType=INTEGER}
  </update>
</mapper>